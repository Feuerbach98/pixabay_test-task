{"version":3,"sources":["api/api.js","components/Search/Search.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["API_KEY","API_URL","getImages","query","perPage","preparedQuery","replace","trim","param","fetch","then","response","ok","Error","status","statusText","json","request","breakpointColumnsObj","default","1100","700","500","Search","storage","useSelector","store","dispatch","useDispatch","search","useCallback","a","console","log","type","debouncedSearch","f","delay","timerId","clearTimeout","args","setTimeout","debounce","useEffect","handleChange","event","name","target","value","images","hits","map","hit","href","largeImageURL","rel","id","className","alt","tags","src","webformatURL","onLoad","document","getElementById","style","background","Form","Group","controlId","Control","onChange","placeholder","Label","as","total","breakpointCols","columnClassName","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","state","action","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.de4b8593.chunk.js","sourcesContent":["const API_KEY = `19234341-bbc7811a42f823cfa8eb8945b`;\nconst API_URL = `https://pixabay.com/api/`;\n\nconst request = (param = '') => fetch(`${API_URL}?key=${API_KEY}${param}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n\nexport const getImages = (query, perPage) => {\n  const preparedQuery = query.replace(/\\s+/g, '+').trim()\n\n  return request(`&q=${preparedQuery}&per_page=${perPage}`)\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getImages } from '../../api/api';\nimport Masonry from 'react-masonry-css';\nimport './Search.css';\n\nconst breakpointColumnsObj = {\n  default: 4,\n  1100: 3,\n  700: 2,\n  500: 1\n};\n\nexport const Search = () => {\n  const storage = useSelector(store => store);\n  const dispatch = useDispatch();\n\n  const debounce = (f, delay) => {\n    let timerId;\n    console.log('init', timerId)\n    return (...args) => {\n      clearTimeout(timerId);\n      timerId = setTimeout(f, delay, ...args)\n    }\n  }\n\n  const search = useCallback(async() => {\n    console.log('searching')\n    dispatch({\n      type: 'ON_SEARCH',\n      response: await getImages(storage.query, storage.perPage)\n    })\n  }, [dispatch, storage.perPage, storage.query])\n\n  const debouncedSearch = useCallback(debounce(search, 1000), [])\n\n  useEffect(() => {\n    debouncedSearch();\n  }, []);\n\n  const handleChange = (event) => {\n    console.log('hello')\n    dispatch({\n      type: 'ON_CHANGE',\n      name: event.target.name,\n      value: event.target.value\n    })\n\n    debouncedSearch();\n  }\n\n  const onImageLoad = (id) => {\n    document.getElementById(id).style.background = 'none';\n  }\n\n  const images = storage.response.hits ? storage.response.hits.map(hit => {\n    return (\n      <a key={hit.id} href={hit.largeImageURL} target=\"_blank\" rel=\"noreferrer\">\n        <img\n          id={hit.id}\n          className=\"image\"\n          alt={hit.tags}\n          src={hit.webformatURL}\n          onLoad={() => onImageLoad(hit.id)}\n        ></img>\n      </a>\n    );\n  }) : null;\n\n  return (\n    <div className=\"search\">\n      <Form className=\"d-flex d-flex justify-content-between\">\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\n          <Form.Control\n            name=\"query\"\n            type=\"text\"\n            value={storage.query}\n            onChange={handleChange}\n            placeholder=\"Search\"\n          />\n        </Form.Group>\n        <Form.Group\n          className=\"d-flex align-items-center\"\n          controlId=\"exampleForm.ControlSelect1\"\n        >\n          <Form.Label className=\"my-0 mx-2\">Count:</Form.Label>\n          <Form.Control\n            className=\"count\"\n            as=\"select\"\n            value={storage.perPage}\n            onChange={handleChange}\n            name=\"perPage\"\n          >\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n            <option value={50}>50</option>\n            <option value={100}>100</option>\n          </Form.Control>\n        </Form.Group>\n      </Form>\n      {storage.response.total === 0 ? (\n        \"There are no images that suits your criteria\"\n      ) : (\n        <Masonry\n          breakpointCols={breakpointColumnsObj}\n          className=\"my-masonry-grid\"\n          columnClassName=\"my-masonry-grid_column\"\n        >\n          {images}\n        </Masonry>\n      )}\n    </div>\n  );\n};\n","import './App.css';\nimport { Search } from './components/Search/Search';\n\nconst App = () => {\n  return (\n    <div className=\"p-4\">\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux';\n\nconst initialState = {\n  response: {},\n  query: '',\n  perPage: 10,\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ON_CHANGE': {\n      return {\n        ...state,\n        [action.name]: action.value,\n      }\n    }\n\n    case 'ON_SEARCH': {\n      return {\n        ...state,\n        response: action.response,\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const store = createStore(reducer, initialState);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
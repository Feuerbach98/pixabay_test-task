{"version":3,"sources":["api/api.js","components/ImageList/ImageList.js","components/Search/Search.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["API_KEY","API_URL","getImages","query","perPage","q","replace","trim","toLowerCase","url","fetch","then","response","ok","Error","status","statusText","json","request","breakpointColumnsObj","default","1100","700","500","ImageList","hits","total","imgs","length","map","hit","title","href","largeImageURL","target","rel","className","alt","tags","src","webformatURL","id","breakpointCols","columnClassName","undefined","CircularProgress","Search","storage","useSelector","store","dispatch","useDispatch","useEffect","a","imgCount","type","search","onChange","useCallback","event","value","tagret","TextField","label","FormControl","InputLabel","htmlFor","Select","native","name","inputProps","aria-label","App","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","state","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10620158.chunk.js","sourcesContent":["const API_KEY = `19234341-bbc7811a42f823cfa8eb8945b`;\nconst API_URL = `https://pixabay.com/api`;\n\nconst request = (url = '') => fetch(`${API_URL}/?key=${API_KEY}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n\nexport const getImages = (query, perPage) => {\n  const q = query.replace(/\\s+/g, '+').trim().toLowerCase();\n\n  return request(`&q=${q}&per_page=${perPage}`);\n};\n","import { CircularProgress } from '@material-ui/core';\nimport React from 'react';\nimport Masonry from 'react-masonry-css';\nimport './ImageList.css';\n\nconst breakpointColumnsObj = {\n  default: 4,\n  1100: 3,\n  700: 2,\n  500: 1\n};\n\nexport const ImageList = ({ hits, total }) => {\n  const imgs = hits && hits.length ? hits.map((hit) => {\n    return (\n      <a title=\"Open in new tab\" key={hit.id} href={hit.largeImageURL} target=\"_blank\" rel=\"noreferrer\">\n        <img className=\"image\" alt={hit.tags} src={hit.webformatURL} />\n      </a>\n    );\n  }) : null\n\n  return (\n    <div className=\"list\">\n      {!imgs ? (\n        <CircularProgress />\n      ) : imgs && imgs.length ? (\n        <Masonry\n          breakpointCols={breakpointColumnsObj}\n          className=\"my-masonry-grid\"\n          columnClassName=\"my-masonry-grid_column\"\n        >\n          {imgs}\n        </Masonry>\n      ) : total !== undefined ? (\n        `There are no images that suits your criteria`\n      ) : null}\n    </div>\n  );\n}\n","import React, { useCallback, useEffect } from 'react';\n\nimport { TextField } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getImages } from '../../api/api';\nimport { ImageList } from '../ImageList/ImageList';\nimport './Search.css';\n\nexport const Search = () => {\n  const storage = useSelector(store => store);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async() => {\n      dispatch({\n        type: 'ON_SEARCH',\n        search: await getImages(storage.query, storage.imgCount)\n      });\n    })()\n  }, [dispatch, storage.imgCount, storage.query]);\n\n  const onChange = useCallback(async(event) => {\n    dispatch({\n      type: 'ON_INPUT',\n      query: event.target.value\n    });\n\n    dispatch({\n      type: 'ON_SEARCH',\n      search: await getImages(event.target.value, storage.imgCount)\n    });\n  }, [dispatch, storage.imgCount])\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    dispatch({\n      type: 'ON_COUNT_CHANGE',\n      [name]: event.target.value\n    });\n  }\n\n  return (\n    <div className=\"search\">\n      <a tagret=\"_blank\" className=\"logo\" href=\"https://pixabay.com/\">\n        pixabay\n      </a>\n      <div className=\"search__top\">\n        <div className=\"search__inputs\">\n          <TextField\n            type=\"text\"\n            value={storage.query}\n            onChange={onChange}\n            label=\"Search\"\n          ></TextField>\n          <FormControl>\n            <InputLabel className=\"select\" htmlFor=\"imgCount\">\n              Count\n            </InputLabel>\n            <Select\n              native\n              className=\"select\"\n              value={storage.imgCount}\n              onChange={handleChange}\n              inputProps={{\n                name: \"imgCount\",\n                id: \"imgCount\",\n              }}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value={10}>10</option>\n              <option value={20}>20</option>\n              <option value={50}>50</option>\n              <option value={100}>100</option>\n            </Select>\n          </FormControl>\n        </div>\n      </div>\n      <ImageList hits={storage.search.hits} total={storage.search.total} />\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport './background.css';\nimport { Search } from './components/Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <div class=\"area\" >\n            <ul class=\"circles\">\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n            </ul>\n    </div>\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux';\n\nconst initialState = {\n  search: {},\n  query: '',\n  imgCount: 10\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ON_INPUT': {\n      return {\n        ...state,\n        query: action.query,\n      }\n    }\n\n    case 'ON_SEARCH': {\n      return {\n        ...state,\n        search: action.search\n      }\n    }\n\n    case 'ON_COUNT_CHANGE': {\n      return {\n        ...state,\n        imgCount: action.imgCount\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const store = createStore(reducer, initialState);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}